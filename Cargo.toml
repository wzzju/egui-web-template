[package]
name = "egui_web_template"
version = "0.1.0"
authors = ["Zhen Wang <wzzjuustc@gmail.com>"]
edition = "2021"
rust-version = "1.75"
include = [
    "assets/icon-256.png",
]

[features]
# Enable the `chrono` feature, which is equivalent to the following command:
# `cargo build --features="chrono"` or `trunk serve --features="chrono"`.
default = ["chrono"]
chrono = ["egui_extras/datepicker", "dep:chrono"]
## Allow serialization using [`serde`](https://docs.rs/serde).
serde = ["egui/serde", "egui_plot/serde"]

[dependencies]
egui = "0.25.0"
eframe = { version = "0.25.0", default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
] }
log = "0.4"
# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
egui_plot = "0.25.0"
egui_extras = { version = "0.25.0", features = ["all_loaders"] }
image = { version = "0.24", features = ["jpeg", "png"] }
#! ### Optional dependencies
chrono = { version = "0.4.33", optional = true, features = ["js-sys", "wasmbind"] }

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.10"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2

[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
